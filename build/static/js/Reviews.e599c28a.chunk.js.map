{"version":3,"sources":["components/movieDetailsPage/reviews/Reviews.js"],"names":["Reviews","state","reviews","id","this","props","match","params","movieId","fetchReviews","then","result","setState","data","results","length","map","review","key","author","content","Component"],"mappings":"iKAKMA,E,4MACJC,MAAQ,CAAEC,QAAS,I,kEAEE,IAAD,OACZC,EAAWC,KAAKC,MANGC,MAAMC,OAAOC,QAOtCC,YAAaN,GAAIO,MAAK,SAAAC,GAAM,OAC1B,EAAKC,SAAS,CAAEV,QAASS,EAAOE,KAAKC,e,+BAI/B,IACAZ,EAAYE,KAAKH,MAAjBC,QACR,OAA0B,IAAnBA,EAAQa,OACb,2EAEA,4BACGb,EAAQc,KAAI,SAAAC,GAAM,OACjB,wBAAIC,IAAKD,EAAOd,IACd,uCACU,8BAAOc,EAAOE,SAExB,2BAAIF,EAAOG,kB,GArBDC,aA6BPrB","file":"static/js/Reviews.e599c28a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { fetchReviews } from '../../services/moviesApi';\n\nconst getId = props => props.match.params.movieId;\n\nclass Reviews extends Component {\n  state = { reviews: [] };\n\n  componentDidMount() {\n    const id = getId(this.props);\n    fetchReviews(id).then(result =>\n      this.setState({ reviews: result.data.results }),\n    );\n  }\n\n  render() {\n    const { reviews } = this.state;\n    return reviews.length === 0 ? (\n      <h3>We don&acute;t have any reviews for this movie</h3>\n    ) : (\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h3>\n              Author: <span>{review.author}</span>\n            </h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default Reviews;\n"],"sourceRoot":""}